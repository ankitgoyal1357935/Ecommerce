{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-WEBSITE\\\\Frontend_client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rend, setRend] = useState({});\n  useEffect(() => {\n    if (rend) {\n      return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    }\n  });\n\n  const doit = () => {\n    const m = register();\n    setRend(m);\n    console.log(thisrend);\n  };\n\n  const register = async () => {\n    let cred = {\n      name,\n      email,\n      password\n    };\n    var r = await fetch(\"http://localhost:7777/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cred)\n    }).then(data => {\n      return data.json();\n    });\n    console.log(r);\n    return r;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-container w-75 mt-5 m-auto \",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2 m-2\",\n        controlId: \"formBasicName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: name,\n          placeholder: \"Enter name\",\n          name: \"name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2 m-2\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          placeholder: \"Enter email\",\n          name: \"email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 m-2\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        style: {\n          textAlign: \"center\",\n          margin: \"auto\",\n          display: \"flex\"\n        },\n        type: \"button\",\n        onClick: doit,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"Est3yhrVu2shwulAyJGfgDvf2lw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/REACT-WEBSITE/Frontend_client/src/pages/Register.js"],"names":["React","useState","useEffect","Form","Button","Login","Register","name","setName","email","setEmail","password","setPassword","rend","setRend","doit","m","register","console","log","thisrend","cred","r","fetch","method","headers","body","JSON","stringify","then","data","json","e","target","value","textAlign","margin","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAJ,EAAU;AACN,0BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GANQ,CAAT;;AAQA,QAAME,IAAI,GAAG,MAAM;AACf,UAAMC,CAAC,GAAGC,QAAQ,EAAlB;AACAH,IAAAA,OAAO,CAACE,CAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,GAJD;;AAKA,QAAMH,QAAQ,GAAG,YAAY;AACzB,QAAII,IAAI,GAAG;AACPd,MAAAA,IADO;AAEPE,MAAAA,KAFO;AAGPE,MAAAA;AAHO,KAAX;AAKA,QAAIW,CAAC,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE;AAAE,kBAAU,kBAAZ;AAAgC,wBAAgB;AAAhD,OAA3B;AAAiGC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAAvG,KAA5C,CAAL,CAAgLQ,IAAhL,CAAqLC,IAAI,IAAI;AACvM,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAFa,CAAd;AAGAb,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,WAAOA,CAAP;AAEH,GAZD;;AAiBA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAiC,QAAA,SAAS,EAAC,eAA3C;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,KAAK,EAAEf,IAAjC;AAAuC,UAAA,WAAW,EAAC,YAAnD;AAAgE,UAAA,IAAI,EAAC,MAArE;AAA4E,UAAA,QAAQ,EAAGyB,CAAD,IAAO;AAAExB,YAAAA,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyB;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAiC,QAAA,SAAS,EAAC,gBAA3C;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,KAAK,EAAEzB,KAAlC;AAAyC,UAAA,WAAW,EAAC,aAArD;AAAmE,UAAA,IAAI,EAAC,OAAxE;AAAgF,UAAA,QAAQ,EAAGuB,CAAD,IAAO;AAAEtB,YAAAA,QAAQ,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAA0B;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAiC,QAAA,SAAS,EAAC,mBAA3C;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,KAAK,EAAEvB,QAArC;AAA+C,UAAA,WAAW,EAAC,UAA3D;AAAsE,UAAA,IAAI,EAAC,UAA3E;AAAsF,UAAA,QAAQ,EAAGqB,CAAD,IAAO;AAAEpB,YAAAA,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA6B;AAAtI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,MAAM,EAAE,MAA/B;AAAuCC,UAAAA,OAAO,EAAE;AAAhD,SAAjC;AAA2F,QAAA,IAAI,EAAC,QAAhG;AAAyG,QAAA,OAAO,EAAEtB,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH,CA7DD;;GAAMT,Q;;KAAAA,Q;AAgEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Login from \"./Login\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [rend, setRend] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        if (rend) {\r\n            return (\r\n                <Login />\r\n            )\r\n        }\r\n    })\r\n\r\n    const doit = () => {\r\n        const m = register();\r\n        setRend(m);\r\n        console.log(thisrend);\r\n    }\r\n    const register = async () => {\r\n        let cred = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n        var r = await fetch(\"http://localhost:7777/api/auth/register\", { method: \"POST\", headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' }, body: JSON.stringify(cred) }).then(data => {\r\n            return data.json();\r\n        })\r\n        console.log(r)\r\n        return r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form className=\"form-container w-75 mt-5 m-auto \" >\r\n                <Form.Group className=\"mb-2 m-2\" controlId=\"formBasicName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" value={name} placeholder=\"Enter name\" name=\"name\" onChange={(e) => { setName(e.target.value) }} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-2 m-2\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} placeholder=\"Enter email\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 m-2\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" value={password} placeholder=\"Password\" name=\"password\" onChange={(e) => { setPassword(e.target.value) }} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"success\" style={{ textAlign: \"center\", margin: \"auto\", display: \"flex\" }} type=\"button\" onClick={doit}>\r\n                    SignUp\r\n                </Button>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}