{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-WEBSITE\\\\Frontend_client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport Login from \"./Login\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  var r = null;\n\n  const register = async () => {\n    let cred = {\n      name,\n      email,\n      password\n    };\n    var r = await fetch(\"http://localhost:7777/api/auth/register\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cred)\n    }).then(data => {\n      return data.json();\n    });\n\n    if (r) {\n      return /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/api/auth/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  if (!r) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-container w-75 mt-5 m-auto \",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2 m-2\",\n          controlId: \"formBasicName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            placeholder: \"Enter name\",\n            name: \"name\",\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-2 m-2\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            name: \"email\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3 m-2\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          style: {\n            textAlign: \"center\",\n            margin: \"auto\",\n            display: \"flex\"\n          },\n          type: \"button\",\n          onClick: register,\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_s(Register, \"bWM4qb/ZXZXoI9Vq9D7I/dY70ak=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/REACT-WEBSITE/Frontend_client/src/pages/Register.js"],"names":["React","useState","Form","Button","Login","Routes","Route","Register","name","setName","email","setEmail","password","setPassword","r","register","cred","fetch","method","headers","body","JSON","stringify","then","data","json","e","target","value","textAlign","margin","display"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Form,Button} from \"react-bootstrap\";\r\nimport Login from \"./Login\";\r\nimport {\r\n\r\n    Routes,\r\n    Route,\r\n\r\n  } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n    const[name ,setName] = useState(\"\");\r\n    const[email ,setEmail] = useState(\"\");\r\n    const[password ,setPassword] = useState(\"\");\r\n    var r = null;\r\n    const register = async()=>{\r\n        let cred = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n     var r =  await fetch(\"http://localhost:7777/api/auth/register\",{method: \"POST\",headers: {'Accept': 'application/json','Content-Type': 'application/json'},body: JSON.stringify(cred)}).then(data => {\r\n        return data.json();\r\n       })\r\n\r\n       if(r){\r\n           return(\r\n\r\n               <Routes>\r\n                   <Switch>\r\n\r\n               <Redirect to=\"/api/auth/login\"/>\r\n                   </Switch>\r\n           </Routes>\r\n               )\r\n       }\r\n    }\r\n           \r\n    \r\n    if(!r){\r\n\r\n        return (\r\n            <>\r\n            <Form className=\"form-container w-75 mt-5 m-auto \" >\r\n            <Form.Group className=\"mb-2 m-2\" controlId=\"formBasicName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"text\" value={name} placeholder=\"Enter name\"  name=\"name\" onChange={(e)=>{setName(e.target.value)}} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-2 m-2\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" value={email} placeholder=\"Enter email\" name=\"email\" onChange={(e)=>{setEmail(e.target.value)}} /> \r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3 m-2\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" value={password} placeholder=\"Password\" name=\"password\" onChange={(e)=>{setPassword(e.target.value)}} /> \r\n                </Form.Group>\r\n\r\n                <Button variant=\"success\" style={{ textAlign: \"center\", margin: \"auto\", display: \"flex\" }} type=\"button\" onClick={register}>\r\n                    SignUp\r\n                </Button>\r\n            </Form>\r\n           \r\n        </>\r\n    )\r\n}else{\r\n    <Login/>\r\n}\r\n}\r\n\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}